apply plugin: 'com.android.library'
//apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 25
    buildToolsVersion '26.0.2'

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug{
//            shrinkResources true
            minifyEnabled false
            buildConfigField "boolean", "LOGISSHOW", "true"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
        release {
            minifyEnabled false
            buildConfigField "boolean", "LOGISSHOW", "true"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    lintOptions {
        abortOnError false
        warning 'InvalidPackage'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'
}


tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

////在windows上要这么写
//retrolambda {
//    jdk System.getenv("JAVA_HOME")
//    oldJdk System.getenv("JAVA_HOME")
//    javaVersion JavaVersion.VERSION_1_7
////    jvmArgs '-arg1', '-arg2'
//    defaultMethods true
//    incremental true
//}

/** 以下开始是将Android Library上传到jcenter的相关配置**/

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

//项目主页
def siteUrl = 'https://github.com/BirdGuo/WifiConnHelper'    // project homepage
//项目的版本控制地址
def gitUrl = 'https://github.com/BirdGuo/WifiConnHelper.git' // project git

//发布到组织名称名字，必须填写
group = "com.gxw" //Maven Group ID for the artifact，一般填你唯一的包名
//发布到JCenter上的项目名字，必须填写
def libName = "WifiConnHelper"
// 版本号，下次更新是只需要更改版本号即可
version = "1.0.2"
/**  上面配置后上传至jcenter后的编译路径是这样的： compile 'cn.bluemobi.dylan:sqlitelibrary:1.0'  **/

//group = "com.gxw"// Maven Group ID for the artifact，一般填你唯一的包名
//version = "1.0.0"

//生成源文件
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
//生成文档
task javadoc(type: Javadoc) {
    options.encoding = 'UTF-8'
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options.encoding "UTF-8"
    options.charSet 'UTF-8'
    options.author true
    options.version true
    options.links "https://github.com/BirdGuo/WifiConnHelper/wificonnhelperlib/doc"
    failOnError false/*这句特别特别重要*/
}

//文档打包成jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

//拷贝javadoc文件
task copyDoc(type: Copy) {
    from "${buildDir}/docs/"
    into "docs"
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

//上传到jcenter
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")//读取 local.properties 文件里面的 bintray.user
    key = properties.getProperty("bintray.apikey") //读取 local.properties 文件里面的 bintray.apikey
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = libName   //发布到JCenter上的项目名字   项目名字，而非库名字
        websiteUrl = siteUrl
        desc = 'This is a tool to help discover and connect wifi'    //项目描述
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}


// 配置maven库，生成POM.xml文件
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
//                artifactId 'wificonnhelperlib'//项目名称
                // Add your description here
                name "This is a tool to help discover and connect wifi"    //不重要
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'whitesnake'
                        name 'whitesnake'
                        email 'a603004002@126.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
